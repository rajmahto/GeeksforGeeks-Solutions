class Solution {
public:
    int longestCommonSubstr(const string& str1, const string& str2) {
        int n = str1.size();
        int m = str2.size();
        
        // Create a 2D vector to store lengths of longest common suffixes
        vector<vector<int>> dp(n + 1, vector<int>(m + 1, 0));
        int maxLength = 0;

        // Build the dp array
        for (int i = 1; i <= n; ++i) {
            for (int j = 1; j <= m; ++j) {
                if (str1[i - 1] == str2[j - 1]) {
                    dp[i][j] = dp[i - 1][j - 1] + 1;
                    maxLength = max(maxLength, dp[i][j]);
                }
            }
        }

        return maxLength;
    }
};
